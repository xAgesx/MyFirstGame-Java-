package Entity;

import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;

import Main.GamePanel;
import Main.Keyhandler;

public class Player extends Entity{
	GamePanel G ;
	Keyhandler KeyH;
	
	// relative player coordinates (Camera view)
	
	public final int RelativeX  ;
	public final int RelativeY  ;
	
	public Player(GamePanel G , Keyhandler KeyH) {
		
		this.G = G;
		this.KeyH = KeyH;
		
		RelativeX = G.ScreenWidth/2 - G.TileSize/2 ;
		RelativeY = G.ScreenHeight/2  - G.TileSize/2;
		
		hitBox = new Rectangle();
		hitBox.x = worldX;
		hitBox.y = worldY;
		hitBox.width = 32 ;
		hitBox.height = 16 ;
		
		
		SetDefaults();
		GetPlayerImg();
	}
	
	public void SetDefaults() {
		
		// Absolute player coordinates on the worldMap
		
		worldX = 192;
		worldY = 816;
		Speed = 4;
		Direction = "up1"; 
	}
	
	public void GetPlayerImg() {
		
		try {
			
			up1 = ImageIO.read(getClass().getResourceAsStream("/player/oldman_up_1.png"));
			down1 = ImageIO.read(getClass().getResourceAsStream("/player/oldman_down_1.png"));
			right1 = ImageIO.read(getClass().getResourceAsStream("/player/oldman_right_1.png"));
			left1 = ImageIO.read(getClass().getResourceAsStream("/player/oldman_left_1.png"));
			
			up2 = ImageIO.read(getClass().getResourceAsStream("/player/oldman_up_2.png"));
			down2 = ImageIO.read(getClass().getResourceAsStream("/player/oldman_down_2.png"));
			right2 = ImageIO.read(getClass().getResourceAsStream("/player/oldman_right_2.png"));
			left2 = ImageIO.read(getClass().getResourceAsStream("/player/oldman_left_2.png"));
			
		}catch(IOException e) {
			e.printStackTrace();
			}
	}
	
	int mvtFps = 0;
	
	public void Update() {
		Direction = "up1"; 
		if(KeyH.UpPressed == true) {
			
			Direction ="up";
			
		}
		else if(KeyH.DownPressed == true) {
			
			Direction ="down";
			
			
		}
		else if(KeyH.RightPressed == true) {
			
			Direction ="right";
			
			
		}
		else if(KeyH.LeftPressed == true) {
			
			Direction ="left";
			
			
		}
		
		collisionOn = false ;
		G.collisionCheck.TileCheck(this);
		G.collisionCheck.ObjectCheckCollision(this);
		
		if (collisionOn == false) {
			
			switch(Direction) {
			
			case "up": worldY -= Speed ;
				break ;
			case "down": worldY += Speed ;
				break ;
			case "right": worldX += Speed ;
				break ;
			case "left": worldX -= Speed ; 
				break ;
			
			}
		}
		mvtFps ++;
		
		if(mvtFps > 20 ) {
			mvtFps = 0 ;
		}
	}
	
	public void Draw(Graphics2D g1) {
		
		//g1.setColor(Color.white);
		//g1.fillRect(x, y, G.TileSize, G.TileSize);
		
		BufferedImage image = null;
		
		switch (Direction) {
		
		case "up": image = (mvtFps < 10 ) ? up1 : up2 ;
		break;
		
		case "down": image = (mvtFps < 10 ) ? down1 : down2 ;
		break;
		
		case "right": image = (mvtFps < 10 ) ? right1 : right2 ;
		break;
		
		case "left": image = (mvtFps < 10 ) ? left1 : left2 ;
		break;
		
		default : image = down1;
		
		}
		g1.drawImage(image,RelativeX,RelativeY,G.TileSize,G.TileSize,null);
			
		
	}
}
