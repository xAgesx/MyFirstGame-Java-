package Main;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import javax.swing.JPanel;
import Entity.Player;
import Object.Chest;
import Object.SuperObject;

public class GamePanel extends JPanel implements Runnable{
	
	//Screen Settings 
	
	final int DefaultTileSize = 16 ;
	final int Scale = 3 ;
	final public int TileSize = DefaultTileSize*Scale ;
	final public int maxScreenCol = 16; 
	final public int maxScreenRow = 12;
	final public int ScreenWidth = maxScreenCol * TileSize;
	final public int ScreenHeight = maxScreenRow * TileSize;
	
	//WorldMap Settings
	
	public final int maxWorldCol = 48;
	public final int maxWorldRow = 48;
	public final int worldWidth = maxWorldCol * TileSize ;
	public final int worldHeight = maxWorldRow * TileSize ;
	
	
	int FPS = 60;
	int objMaxNumber = 20 ;
	
	Keyhandler KeyH	= new Keyhandler();
	Thread GameThread ;
	
	public Player player = new Player(this,KeyH);
	public CollisionCheck collisionCheck = new CollisionCheck(this);
	
	//Tile manager
	public TileManager TileM = new TileManager(this) ;
	
	//Object number at a time
	public SuperObject obj[] = new SuperObject[objMaxNumber]; 
	public ObjectPlacer objSetter = new ObjectPlacer(this);
	
	public GamePanel() {
		this.setPreferredSize(new Dimension(ScreenWidth,ScreenHeight));
		this.setDoubleBuffered(true);
		this.addKeyListener(KeyH);
		this.setFocusable(true);
	}
	
	public void SetupGame() {
		objSetter.setObject();
	}
	
	public void StartGameThread() {
		GameThread = new Thread(this);
		GameThread.start();
		
	}
	
	@Override
	public void run() {
		while(GameThread != null) {
			Update();
			repaint();
			try {
				Thread.sleep(20);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
	}
	public void Update() {
		
		player.Update();
		
	}
	
	
	public void paintComponent(Graphics g) {
		
		super.paintComponent(g);
		Graphics2D g1 = (Graphics2D)g;
		
		//DRAW TILES
		TileM.Draw(g1);
		
		//DRAW OBJECTS
		for (int i=0 ; i< objMaxNumber ; i++) {
			if(obj[i]!= null)
				obj[i].Draw(this, g1);
		}

		//DRAW PLAYER
		player.Draw(g1);
	
		g.drawRect(obj[1].worldX,obj[1].worldY,48,48);
		g.setColor(Color.RED);
		for(int i = 0 ; i<20 ; i++) {
			if (obj[i] == null ){
				System.out.println("obj "+ i);
			}
		}
		g1.dispose();
		
	}
	
}
